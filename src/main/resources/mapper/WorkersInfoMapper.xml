<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhx.dao.mapper.WorkersInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lhx.dao.entity.WorkersInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="workername" property="workername" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="salary" property="salary" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="EmployedDates" property="employeddates" jdbcType="TIMESTAMP" />
    <result column="department" property="department" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, workername, sex, salary, email, EmployedDates, department
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lhx.dao.entity.WorkersInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from workers_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from workers_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from workers_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lhx.dao.entity.WorkersInfoExample" >
    delete from workers_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lhx.dao.entity.WorkersInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into workers_info (workername, sex, salary, 
      email, EmployedDates, department
      )
    values (#{workername,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{salary,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{employeddates,jdbcType=TIMESTAMP}, #{department,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lhx.dao.entity.WorkersInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into workers_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workername != null" >
        workername,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="employeddates != null" >
        EmployedDates,
      </if>
      <if test="department != null" >
        department,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workername != null" >
        #{workername,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="employeddates != null" >
        #{employeddates,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lhx.dao.entity.WorkersInfoExample" resultType="java.lang.Integer" >
    select count(*) from workers_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update workers_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.workername != null" >
        workername = #{record.workername,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.employeddates != null" >
        EmployedDates = #{record.employeddates,jdbcType=TIMESTAMP},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workers_info
    set id = #{record.id,jdbcType=INTEGER},
      workername = #{record.workername,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      EmployedDates = #{record.employeddates,jdbcType=TIMESTAMP},
      department = #{record.department,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhx.dao.entity.WorkersInfo" >
    update workers_info
    <set >
      <if test="workername != null" >
        workername = #{workername,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="employeddates != null" >
        EmployedDates = #{employeddates,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhx.dao.entity.WorkersInfo" >
    update workers_info
    set workername = #{workername,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      salary = #{salary,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      EmployedDates = #{employeddates,jdbcType=TIMESTAMP},
      department = #{department,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>